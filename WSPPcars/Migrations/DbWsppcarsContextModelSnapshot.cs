// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WSPPCars.Models;

#nullable disable

namespace WSPPCars.Migrations
{
    [DbContext(typeof(DbWsppcarsContext))]
    partial class DbWsppcarsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WSPPCars.Models.Dodatki", b =>
                {
                    b.Property<int>("IdDodatku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Dodatku");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDodatku"));

                    b.Property<bool?>("Dostepnosc")
                        .HasColumnType("bit")
                        .HasColumnName("dostepnosc");

                    b.Property<decimal?>("Kwota")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota");

                    b.Property<string>("LiczbaSztuk")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("liczba_sztuk");

                    b.Property<string>("Nazwa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nazwa");

                    b.HasKey("IdDodatku")
                        .HasName("PK__Dodatki__EDC18B725C43E0B7");

                    b.ToTable("Dodatki", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.DodatkiRezerwacje", b =>
                {
                    b.Property<int>("IdDodatkuRezerwacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Dodatku_Rezerwacji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDodatkuRezerwacji"));

                    b.Property<int?>("IdDodatku")
                        .HasColumnType("int")
                        .HasColumnName("id_dodatku");

                    b.Property<int?>("IdRezerwacji")
                        .HasColumnType("int")
                        .HasColumnName("id_rezerwacji");

                    b.HasKey("IdDodatkuRezerwacji")
                        .HasName("PK__Dodatki___05E4C649E6502C2A");

                    b.HasIndex("IdDodatku");

                    b.HasIndex("IdRezerwacji");

                    b.ToTable("Dodatki_Rezerwacje", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.Ogloszenium", b =>
                {
                    b.Property<int>("IdOgloszenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Ogloszenia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOgloszenia"));

                    b.Property<DateTime>("DataDodania")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_dodania");

                    b.Property<bool?>("Dostepnosc")
                        .HasColumnType("bit")
                        .HasColumnName("dostepnosc");

                    b.Property<int?>("IdPojazdu")
                        .HasColumnType("int")
                        .HasColumnName("id_pojazdu");

                    b.Property<decimal?>("Kwota")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota");

                    b.HasKey("IdOgloszenia")
                        .HasName("PK__Ogloszen__DFA8FDD45C039118");

                    b.HasIndex("IdPojazdu");

                    b.ToTable("Ogloszenia");
                });

            modelBuilder.Entity("WSPPCars.Models.Pojazd", b =>
                {
                    b.Property<int>("IdPojazdu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Pojazdu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPojazdu"));

                    b.Property<int?>("IdSztuki")
                        .HasColumnType("int")
                        .HasColumnName("id_sztuki");

                    b.Property<int?>("LiczbaSztuk")
                        .HasColumnType("int")
                        .HasColumnName("liczba_sztuk");

                    b.HasKey("IdPojazdu")
                        .HasName("PK__Pojazd__8DA22F9818265292");

                    b.HasIndex("IdSztuki");

                    b.ToTable("Pojazd", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.PojazdSztuka", b =>
                {
                    b.Property<int>("IdPojazdSztuka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Pojazd_Sztuka");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPojazdSztuka"));

                    b.Property<bool?>("AutomatycznaSkrzynia")
                        .HasColumnType("bit")
                        .HasColumnName("automatyczna_skrzynia");

                    b.Property<int?>("IdTypPojazdu")
                        .HasColumnType("int")
                        .HasColumnName("id_typ_pojazdu");

                    b.Property<int?>("LiczbaDrzwi")
                        .HasColumnType("int")
                        .HasColumnName("liczba_drzwi");

                    b.Property<int?>("LiczbaPasazerow")
                        .HasColumnType("int")
                        .HasColumnName("liczba_pasazerow");

                    b.Property<string>("Marka")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("marka");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<decimal?>("PojemnoscSilnika")
                        .HasColumnType("smallmoney")
                        .HasColumnName("pojemnosc_silnika");

                    b.Property<DateOnly?>("Rocznik")
                        .HasColumnType("date")
                        .HasColumnName("rocznik");

                    b.Property<string>("Zdjecie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPojazdSztuka")
                        .HasName("PK__Pojazd_S__8E13BC71D8D6972E");

                    b.HasIndex("IdTypPojazdu");

                    b.ToTable("Pojazd_Sztuka", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.Rezerwacje", b =>
                {
                    b.Property<int>("IdRezerwacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Rezerwacji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRezerwacji"));

                    b.Property<DateTime?>("DataRozpoczeciaRezerwacji")
                        .HasColumnType("datetime")
                        .HasColumnName("data_rozpoczecia_rezerwacji");

                    b.Property<DateTime?>("DataZakonczeniaRezerwacji")
                        .HasColumnType("datetime")
                        .HasColumnName("data_zakonczenia_rezerwacji");

                    b.Property<bool?>("DostepnoscPojazdu")
                        .HasColumnType("bit")
                        .HasColumnName("dostepnosc_pojazdu");

                    b.Property<int?>("IdOgloszenia")
                        .HasColumnType("int")
                        .HasColumnName("id_ogloszenia");

                    b.Property<int?>("IdStanRezerwacji")
                        .HasColumnType("int")
                        .HasColumnName("id_stan_rezerwacji");

                    b.Property<int?>("IdUbezpieczenia")
                        .HasColumnType("int")
                        .HasColumnName("id_ubezpieczenia");

                    b.Property<int?>("IdUzytkownika")
                        .HasColumnType("int")
                        .HasColumnName("id_uzytkownika");

                    b.Property<decimal?>("KwotaDodatku")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota_dodatku");

                    b.Property<decimal?>("KwotaOgloszenia")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota_ogloszenia");

                    b.Property<decimal?>("KwotaRezerwacji")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota_rezerwacji");

                    b.Property<decimal?>("KwotaUbezpieczenia")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota_ubezpieczenia");

                    b.Property<DateTime?>("Utworzona")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("utworzona");

                    b.HasKey("IdRezerwacji")
                        .HasName("PK__Rezerwac__AE3F74D16EB12FDB");

                    b.HasIndex("IdOgloszenia");

                    b.HasIndex("IdStanRezerwacji");

                    b.HasIndex("IdUbezpieczenia");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("Rezerwacje", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.RodzajKontum", b =>
                {
                    b.Property<int>("IdRodzajuKonta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Rodzaju_Konta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRodzajuKonta"));

                    b.Property<string>("Rodzaj")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rodzaj");

                    b.HasKey("IdRodzajuKonta")
                        .HasName("PK__Rodzaj_K__3DEB5E62B1B97259");

                    b.ToTable("Rodzaj_Konta", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.RodzajPakietu", b =>
                {
                    b.Property<int>("IdRodzajPakietu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Rodzaj_Pakietu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRodzajPakietu"));

                    b.Property<string>("Pakiet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pakiet");

                    b.HasKey("IdRodzajPakietu")
                        .HasName("PK__Rodzaj_P__5AC44AECBDD60B6E");

                    b.ToTable("Rodzaj_Pakietu", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.StanRezerwacji", b =>
                {
                    b.Property<int>("IdStanuRezerwacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Stanu_Rezerwacji");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStanuRezerwacji"));

                    b.Property<string>("Stan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("stan");

                    b.HasKey("IdStanuRezerwacji")
                        .HasName("PK__Stan_Rez__64566693192CC9E1");

                    b.ToTable("Stan_Rezerwacji", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.TypPojazdu", b =>
                {
                    b.Property<int>("IdTypuPojazdu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Typu_Pojazdu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypuPojazdu"));

                    b.Property<string>("Typ")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("typ");

                    b.HasKey("IdTypuPojazdu")
                        .HasName("PK__Typ_Poja__16E966408762E54F");

                    b.ToTable("Typ_Pojazdu", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.Ubezpieczenium", b =>
                {
                    b.Property<int>("IdUbezpieczenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Ubezpieczenia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbezpieczenia"));

                    b.Property<bool?>("Dostepnosc")
                        .HasColumnType("bit")
                        .HasColumnName("dostepnosc");

                    b.Property<int?>("IdRodzajPakietu")
                        .HasColumnType("int")
                        .HasColumnName("id_rodzaj_pakietu");

                    b.Property<decimal?>("Kwota")
                        .HasColumnType("smallmoney")
                        .HasColumnName("kwota");

                    b.Property<string>("Nazwa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nazwa");

                    b.Property<string>("NazwaUbezpieczalni")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nazwa_ubezpieczalni");

                    b.HasKey("IdUbezpieczenia")
                        .HasName("PK__Ubezpiec__0BDD86A241F355D7");

                    b.HasIndex("IdRodzajPakietu");

                    b.ToTable("Ubezpieczenia");
                });

            modelBuilder.Entity("WSPPCars.Models.Uzytkownicy", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Uzytkownika");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUzytkownika"));

                    b.Property<string>("Haslo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("haslo");

                    b.Property<int?>("IdRodzajKonta")
                        .HasColumnType("int")
                        .HasColumnName("id_rodzaj_konta");

                    b.Property<string>("Imie")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("imie");

                    b.Property<string>("Login")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("login");

                    b.Property<string>("Nazwisko")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nazwisko");

                    b.Property<DateTime>("Utworzony")
                        .HasColumnType("datetime2")
                        .HasColumnName("utworzony");

                    b.HasKey("IdUzytkownika")
                        .HasName("PK__Uzytkown__6242D14327CB7F51");

                    b.HasIndex("IdRodzajKonta");

                    b.ToTable("Uzytkownicy", (string)null);
                });

            modelBuilder.Entity("WSPPCars.Models.DodatkiRezerwacje", b =>
                {
                    b.HasOne("WSPPCars.Models.Dodatki", "IdDodatkuNavigation")
                        .WithMany("DodatkiRezerwacjes")
                        .HasForeignKey("IdDodatku")
                        .HasConstraintName("Dodatki_Rezerwacje_Dod");

                    b.HasOne("WSPPCars.Models.Rezerwacje", "IdRezerwacjiNavigation")
                        .WithMany("DodatkiRezerwacjes")
                        .HasForeignKey("IdRezerwacji")
                        .HasConstraintName("Dodatki_Rezerwacje_Rez");

                    b.Navigation("IdDodatkuNavigation");

                    b.Navigation("IdRezerwacjiNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Ogloszenium", b =>
                {
                    b.HasOne("WSPPCars.Models.Pojazd", "IdPojazduNavigation")
                        .WithMany("Ogloszenia")
                        .HasForeignKey("IdPojazdu")
                        .HasConstraintName("Ogloszenia_Poj");

                    b.Navigation("IdPojazduNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Pojazd", b =>
                {
                    b.HasOne("WSPPCars.Models.PojazdSztuka", "IdSztukiNavigation")
                        .WithMany("Pojazds")
                        .HasForeignKey("IdSztuki")
                        .HasConstraintName("Pojazd_Sztuka_Poj");

                    b.Navigation("IdSztukiNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.PojazdSztuka", b =>
                {
                    b.HasOne("WSPPCars.Models.TypPojazdu", "IdTypPojazduNavigation")
                        .WithMany("PojazdSztukas")
                        .HasForeignKey("IdTypPojazdu")
                        .HasConstraintName("Pojazd_Sztuka_Typ");

                    b.Navigation("IdTypPojazduNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Rezerwacje", b =>
                {
                    b.HasOne("WSPPCars.Models.Ogloszenium", "IdOgloszeniaNavigation")
                        .WithMany("Rezerwacjes")
                        .HasForeignKey("IdOgloszenia")
                        .HasConstraintName("Rezerwacje_Og");

                    b.HasOne("WSPPCars.Models.StanRezerwacji", "IdStanRezerwacjiNavigation")
                        .WithMany("Rezerwacjes")
                        .HasForeignKey("IdStanRezerwacji")
                        .HasConstraintName("Rezerwacje_Stan");

                    b.HasOne("WSPPCars.Models.Ubezpieczenium", "IdUbezpieczeniaNavigation")
                        .WithMany("Rezerwacjes")
                        .HasForeignKey("IdUbezpieczenia")
                        .HasConstraintName("Rezerwacje_Ub");

                    b.HasOne("WSPPCars.Models.Uzytkownicy", "IdUzytkownikaNavigation")
                        .WithMany("Rezerwacjes")
                        .HasForeignKey("IdUzytkownika")
                        .HasConstraintName("Rezerwacje_Uz");

                    b.Navigation("IdOgloszeniaNavigation");

                    b.Navigation("IdStanRezerwacjiNavigation");

                    b.Navigation("IdUbezpieczeniaNavigation");

                    b.Navigation("IdUzytkownikaNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Ubezpieczenium", b =>
                {
                    b.HasOne("WSPPCars.Models.RodzajPakietu", "IdRodzajPakietuNavigation")
                        .WithMany("Ubezpieczenia")
                        .HasForeignKey("IdRodzajPakietu")
                        .HasConstraintName("Ubezpieczenia_Rodz");

                    b.Navigation("IdRodzajPakietuNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Uzytkownicy", b =>
                {
                    b.HasOne("WSPPCars.Models.RodzajKontum", "IdRodzajKontaNavigation")
                        .WithMany("Uzytkownicies")
                        .HasForeignKey("IdRodzajKonta")
                        .HasConstraintName("Uzytkownicy_Rodz");

                    b.Navigation("IdRodzajKontaNavigation");
                });

            modelBuilder.Entity("WSPPCars.Models.Dodatki", b =>
                {
                    b.Navigation("DodatkiRezerwacjes");
                });

            modelBuilder.Entity("WSPPCars.Models.Ogloszenium", b =>
                {
                    b.Navigation("Rezerwacjes");
                });

            modelBuilder.Entity("WSPPCars.Models.Pojazd", b =>
                {
                    b.Navigation("Ogloszenia");
                });

            modelBuilder.Entity("WSPPCars.Models.PojazdSztuka", b =>
                {
                    b.Navigation("Pojazds");
                });

            modelBuilder.Entity("WSPPCars.Models.Rezerwacje", b =>
                {
                    b.Navigation("DodatkiRezerwacjes");
                });

            modelBuilder.Entity("WSPPCars.Models.RodzajKontum", b =>
                {
                    b.Navigation("Uzytkownicies");
                });

            modelBuilder.Entity("WSPPCars.Models.RodzajPakietu", b =>
                {
                    b.Navigation("Ubezpieczenia");
                });

            modelBuilder.Entity("WSPPCars.Models.StanRezerwacji", b =>
                {
                    b.Navigation("Rezerwacjes");
                });

            modelBuilder.Entity("WSPPCars.Models.TypPojazdu", b =>
                {
                    b.Navigation("PojazdSztukas");
                });

            modelBuilder.Entity("WSPPCars.Models.Ubezpieczenium", b =>
                {
                    b.Navigation("Rezerwacjes");
                });

            modelBuilder.Entity("WSPPCars.Models.Uzytkownicy", b =>
                {
                    b.Navigation("Rezerwacjes");
                });
#pragma warning restore 612, 618
        }
    }
}
